package _test

import (
	"errors"
	"fmt"
	clusterpedia_discovery "github.com/clusterpedia-io/clusterpedia/pkg/discovery"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/client-go/discovery"
	"testing"

	clusterv1alpha2 "github.com/clusterpedia-io/api/cluster/v1alpha2"
	"k8s.io/client-go/rest"
	"k8s.io/client-go/tools/clientcmd"
)

func buildClusterConfig(cluster *clusterv1alpha2.PediaCluster) (*rest.Config, error) {
	if len(cluster.Spec.Kubeconfig) != 0 {
		clientconfig, err := clientcmd.NewClientConfigFromBytes(cluster.Spec.Kubeconfig)
		if err != nil {
			return nil, err
		}
		return clientconfig.ClientConfig()
	}

	if cluster.Spec.APIServer == "" {
		return nil, errors.New("Cluster APIServer Endpoint is required")
	}

	if len(cluster.Spec.TokenData) == 0 &&
		(len(cluster.Spec.CertData) == 0 || len(cluster.Spec.KeyData) == 0) {
		return nil, errors.New("Cluster APIServer's Token or Cert is required")
	}

	config := &rest.Config{
		Host: cluster.Spec.APIServer,
	}

	if len(cluster.Spec.CAData) != 0 {
		config.TLSClientConfig.CAData = cluster.Spec.CAData
	} else {
		config.TLSClientConfig.Insecure = true
	}

	if len(cluster.Spec.CertData) != 0 && len(cluster.Spec.KeyData) != 0 {
		config.TLSClientConfig.CertData = cluster.Spec.CertData
		config.TLSClientConfig.KeyData = cluster.Spec.KeyData
	}

	if len(cluster.Spec.TokenData) != 0 {
		config.BearerToken = string(cluster.Spec.TokenData)
	}
	return config, nil
}

func Test1(t *testing.T) {
	pediaCluster := &clusterv1alpha2.PediaCluster{
		TypeMeta: metav1.TypeMeta{
			Kind:       "PediaCluster",
			APIVersion: "cluster.clusterpedia.io/v1alpha2",
		},
		ObjectMeta: metav1.ObjectMeta{
			Name:      "test",
			Namespace: metav1.NamespaceDefault,
		},
		Spec: clusterv1alpha2.ClusterSpec{
			Kubeconfig: []byte("apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM0ekNDQWN1Z0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFTTVJBd0RnWURWUVFERXdkcmQyOXIKTFdOaE1DQVhEVEkwTURJeU1URXdNVE16TTFvWUR6SXhNalF3TVRJNU1UQXhNek16V2pBU01SQXdEZ1lEVlFRRApFd2RyZDI5ckxXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXB4UTJHYWlOCkRKNWNhNFFhS3J3OTdyUkxtUU5ZdkhRanp0K3diLzBwT24zR0J5Z2RJOUZrbzhyUTU2Nld5Z0JneGV1dVRBSy8KTGdZOXpuUHRWeWt6NWR0U09YY1NPOFBoVE5YNUNRNEM4b1NhSVQ4YjhPVS9YTXUwbURZeStJR3FXYU0xVVkwbwpHVkc5SXVSRndEamVxV1BDZXRsckhsT1dVdFNJZjYyVG4yR01xRXNxMVRuUk9iWmEyOGhUUnRsR1oyOU5QSzd4CjIyOXIwbzBTQWUrb3BSdC9FdjhvM2NiYjF3SXNiQjZTQktFdVhYV0k3YUNpYlRZbU1rS1ppQmJ6ZW1sWG1oWEQKdFMxNk1aOXphcjRwNi9CRjRDMmZqYTVnVUpCbXA2eXRkR3ZPamJKY0VaOGNXMDZQOHpJMERONThrelFBNHlmTQpTLzRhd1ArTTVKTDJ5UUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3CkF3RUIvekFkQmdOVkhRNEVGZ1FVL0tzYUNVQUdpVE84WkxLdGpJeGowMEJCeXlNd0RRWUpLb1pJaHZjTkFRRUwKQlFBRGdnRUJBQlB6L0xaZVZSZDB5MkpHUkxJWng5NGxFaGJrWXNXNmtyNzRCdHBNcUVhMjFBZDJkRlYyRTlaeQpzTkxIeUN3U2R6SjM4dW9ZbUJ4dTYrVUpCVXNjalFZeGVncU5qOE1MdlkrVzJmV29zOTZHQzBwaHRrdWl2VlZ4CnRXMURtOVlMVHBTRnVjVVU5MFdDTHBmYUVTMUlNZ0NEaDVJSHp0bXdIMXpvMXFBckVsV2RBN0tiZGlybTJ0ckQKeVpmcXd6MHdnRnFVVmZGeUg3OVRtWU5jNXRuYUpoTW5EUjFFUXkydHZ6bjZ3WmNYdlF4ZElLVHVXNG5RMGdVaApSVWY2UEI3M1BxdzlvWEwrRWhtODRGVnhGM01zSytqZXBPMFJSUlVjN01Xdk5TRHl0NEQvb3BwUEhzWVlUZTMzCkExbG5Ea3R0WTQ0UFlTWGlPNG5jM2MxSStXRGdvQmM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://172.20.10.8:32766\n  name: kwok-kwok-cluster\ncontexts:\n- context:\n    cluster: kwok-kwok-cluster\n    user: kwok-kwok-cluster\n  name: kwok-kwok-cluster\ncurrent-context: kwok-kwok-cluster\nkind: Config\npreferences: {}\nusers:\n- name: kwok-kwok-cluster\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUUrakNDQStLZ0F3SUJBZ0lJTmQ3M0V0dTJueDh3RFFZSktvWklodmNOQVFFTEJRQXdFakVRTUE0R0ExVUUKQXhNSGEzZHZheTFqWVRBZ0Z3MHlOREF5TWpFeE1ERXpNek5hR0E4eU1USTBNREV5T1RFd01UTXpNMW93TGpFWApNQlVHQTFVRUNoTU9jM2x6ZEdWdE9tMWhjM1JsY25NeEV6QVJCZ05WQkFNVENtdDNiMnN0WVdSdGFXNHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2gzYi9aWU9uNHZoRlU0OFVhY2hFaTVURG4KRjVJbzF5c2lsRVBCRnlqZ01CWHBxNUxySUZlYzRQc0ZJYjFGTXJLdUFZYTBvaEtPNDc4V3R0eVludnJkWlZ5Nwo2TGc4TEVROGh3akJaZDJpRlJsa1JNR0hXNFdIbktYUXBrNHpveXd0NXNLaUxHT3FBbWZSeUJwVjNPNWNVTldVCkwyNXdGODNNeE9qdUhvelpteTBVTWF6bEVjZ3c2WElRUFMrSkJ4ZWN5Q2M0OXZ3NFc4QkhhQ21KKzhZT2MwQlgKdUFod0MybVNMKzRGMzFSWVphWXVoLy9oYWQ0OURLZ3VyNFhSODQxL0pvWWlQclNGSS9aemtUVC9JeldzWURaKwp3WG11NmZQUWRSRGN2dWVUWEo4OHU1SHFYZ2RlNHN0NXNGL2JGQlQvNkFnYllLdkVwMVpjdXhJYzZGeEZBZ01CCkFBR2pnZ0kwTUlJQ01EQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0R3WURWUjBsQkFnd0JnWUVWUjBsQURBTUJnTlYKSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQeXJHZ2xBQm9renZHU3lyWXlNWTlOQVFjc2pNSUlCM0FZRApWUjBSQklJQjB6Q0NBYytDQ210MVltVnlibVYwWlhPQ0VtdDFZbVZ5Ym1WMFpYTXVaR1ZtWVhWc2RJSVdhM1ZpClpYSnVaWFJsY3k1a1pXWmhkV3gwTG5OMlk0SWthM1ZpWlhKdVpYUmxjeTVrWldaaGRXeDBMbk4yWXk1amJIVnoKZEdWeUxteHZZMkZzZ2dsc2IyTmhiR2h2YzNTQ0lHdDNiMnN0YTNkdmF5MWpiSFZ6ZEdWeUxXdDFZbVV0WVhCcApjMlZ5ZG1WeWh3Ui9BQUFCaHhBQUFBQUFBQUFBQUFBQUFBQUFBQUFCaHhEK2dBQUFBQUFBQUFBQUFBQUFBQUFCCmh4RCtnQUFBQUFBQUFMelFkUC8rWXZmTGh4RCtnQUFBQUFBQUFBQ0pTVzE1VmxrdGh3U3NGQW9JaHhBa0RnUTkKVFJRYUp4VEN3RVJzRzhHSGh4QWtEZ1E5VFJRYUp4bGZhMUlTdjUxTWh4RCtnQUFBQUFBQUFCZ2V1Ly8rVGV5awpoeEQrZ0FBQUFBQUFBTytUUXZ6WjBpSVdoeEQrZ0FBQUFBQUFBSUtnYldwM2xJVUVoeEQrZ0FBQUFBQUFBSFU0CnNVZmkzRDNjaHhEK2dBQUFBQUFBQU02QkN4eTlMQWFlaHhEK2dBQUFBQUFBQVBEQStQRTFCVkNKaHhEK2dBQUEKQUFBQUFMdE5mcVhTbEcvVmh4RCtnQUFBQUFBQUFBZ2YrNDNyTVd2amh4RCtnQUFBQUFBQUFDNDlLS2tNZnlMZApod1RHRWdBQmh4RCtnQUFBQUFBQUFMelFkUC8rSnJSa2h4RDlCN1VhekdZQUFLWVgyMTRLdCtueE1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUF4b0xvNm1IT2swYlJIYm42K00wZ054NzlJa3FpOUE5VXU5SHF3Wks1Zjh4ckMKd2J2NUFGdkJHelp1S2VaK1ZrM3hFVjlBalhZeTFlZzdWK2ZOQm1xZWpUNExtdUx4dkVkSjhVRW5RUmpnT1ZZTgpDU0g5ZER2bWpvcEkvQzNGdklpQkh5djRQTkpQRHoyN3ZWZERiN0FINHFqUURuUnJ0ZitmelJheWRRb3BqYUhrCjd6SXdyR1NBbjMzcGZ1MDBpYVBibG9oTGQxV3BNbDRERnVST1Ewb1ZIemlTQ0R5RWFWOGNtTmFSMHpEWXZ5cFUKbUVzVnVOUGNyNm9kZE00MXZBdktURlFhbUNETEdscjhYaFJUMUplUVBBZ202SUV1V1Q3UHdDVWdyL0xTc1BobwpjVllLeHZhbWN6NzNnR0dwME5mY244RjFiYlAzRGVMMnh5dGJia0NJCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb2QyLzJXRHArTDRSVk9QRkduSVJJdVV3NXhlU0tOY3JJcFJEd1JjbzREQVY2YXVTCjZ5QlhuT0Q3QlNHOVJUS3lyZ0dHdEtJU2p1Ty9GcmJjbUo3NjNXVmN1K2k0UEN4RVBJY0l3V1hkb2hVWlpFVEIKaDF1Rmg1eWwwS1pPTTZNc0xlYkNvaXhqcWdKbjBjZ2FWZHp1WEZEVmxDOXVjQmZOek1UbzdoNk0yWnN0RkRHcwo1UkhJTU9seUVEMHZpUWNYbk1nbk9QYjhPRnZBUjJncGlmdkdEbk5BVjdnSWNBdHBraS91QmQ5VVdHV21Mb2YvCjRXbmVQUXlvTHErRjBmT05meWFHSWo2MGhTUDJjNUUwL3lNMXJHQTJmc0Y1cnVuejBIVVEzTDduazF5ZlBMdVIKNmw0SFh1TExlYkJmMnhRVS8rZ0lHMkNyeEtkV1hMc1NIT2hjUlFJREFRQUJBb0lCQVFDR1VVdTA1ODNmb21FaApiMHlORUdDVjgxZnNPOHdHWmQ2ZWVDZnRIL25FWjBLWHY4OVBtMnY0ZTF6eHVqaWtKbGpOT2VqOUZZeU8xQUFxCnFoMU43SWJCbHk0bnBBclZxK29IekFvQTZqWExIUFVRRmxuOXAzMmJ0ZXFHeEtvYUFXcFV3S3Q4QlpmQ2FQS2IKeXcvSGRtaTVaRDZIRkFEeHRWOEtiOC9XWUxXQ2tBYzExN3BJc2pRVzg0ZTN1bjA0NmI3LzQ1Sm9Eek9GUjB1RAovcWJTeURIMzgxLzVjZzZFeTJ1WEJtL2lvSUxqdVQ3T1ZWWmY3M3JZVUlwSzR0TjFzODhWblJpY0ZKamFiZkJzCktjWlZEODVPYXJ0c2J4MEJFV0FsSXZQK2VoaWtxbjFqWEdtY3N2OXFRajFBZjBMcHNvWm8xZHM2K2ZNUVRxc28KYkgrK0NTTkJBb0dCQU1zRWYrM2FrWG5HY21JRDArMkxXUGFmRXorbXJ6WXhSQVFPaGY1RiswYmhhbEhKN1dnTQo4NTNQMTRWem43YmpPd2ZmRkd1cXhWQXZpR3B4OUR0Z1l1cDBQSzF5RzFNeGVQQ3dHc0ROUTFuczdydTZjZDVoCldVWGVvUms5NkEvdXkvTUlHY0hOeGhpRlJERU81VVlhVUxDZ3VLRFVPcGVqV0hvbDM5bi9NK1p4QW9HQkFNd2IKOHFhUXhFbEZINW9EM0pRcEhYYUFlRE90U3dKczdZR3M3SFNYRElvVDFJR2tBOGlLb0NicmI0cDBXdDBPd0s1LwpDR0U0M0ZMdDdheHhXUFVQSkhMam5abXl0NFFsb1pEdVpjWDlsYUxFMjBjd0JhZ2ladElZUG9icVBJb1poekpQCk00bmgxVnZWWVQyTlBuc0pEQnhiWmpKYjBDeUlKV29iaTc2Q0trVVZBb0dBT3lobmdzN1MzMUpGV0d4WEgvd2cKQTFWZFRZbnJ1blhtcE92NmZacTAydldxZm9UQnlqVWo5Qk54Y1BDOVZKU29TZVhtVkcxaHE3aitIazV3WmJEegpnZkEzRWkrUzZNNGN1TDRJUGJCU2RPekdzQ3RuTE83ZkRhNE84WVVKajBMOWFTY3VJand0QWs0ckRjU1NhTGdZClZTK3dQU1U2b1o4MmsvbGZYbTJ3R1BFQ2dZQW52V2xKTlBhQ3JZcXhtZjdnZWdEYWliamRsdWY3Mk9tRlRmM2IKMVcwRGxValMxUFJIbjNYL0hlZmh0VFhieEh1UGZmeExzWjUwSnc4WGZCb3QzSHprUVp6MXgrNGpOSkI0ZjNJaApVblpIOHJ3ZTZDS3gwY0RqTndVMWozV3FEYjVjOVQ2N29kVEF4SkxpUVJYaExxbkUrNmF5TjE0WXpZazdWNUdsCnpnSWM0UUtCZ0RJOUVPa0dLaEZlcEZvc21pYmVOc2dmK0lJRWp4OVRCS0RrTmsxQlk3YVF3ZUp6c0ZSK2d1NEcKdi9sWmNiRjc0MHVLUGhOTEdWK3V5M0pFTG5MWGdZR0FkQkZTTHpkT0RZZnVpMDJvQ1JuTTBDS3Z3YkJVWlpDZwpjQyt3QWJxUi92TTluN2dOd2s3Z0N0YVF3NmU0SmM5MTN1Z0Zsb0RDYjNTVWZBRktKUytjCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="),
		},
	}
	config, err := buildClusterConfig(pediaCluster)
	if err != nil {
		t.Fatal(err)
	}
	fmt.Println(config)

	clusterpedia_discovery.NewDynamicDiscoveryManager("test", config)
}

func Test11(t *testing.T) {
	cfg, err := clientcmd.RESTConfigFromKubeConfig([]byte("apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM0ekNDQWN1Z0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFTTVJBd0RnWURWUVFERXdkcmQyOXIKTFdOaE1DQVhEVEkwTURNeE5URXhORGd5TlZvWUR6SXhNalF3TWpJeE1URTBPREkxV2pBU01SQXdEZ1lEVlFRRApFd2RyZDI5ckxXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTVxc0NLMnBTCitzVnRtUTgzVnJOODFNaGFhNExMWEJRK2xuS1B6YlpuZkhBb2h3UVlRK1FOQlU4bks1dE5QYktxQUlrcVozQWoKRjhvNGFnaWJGM3BSZG1pYUpYZE5JYUROSGlnVmZFN21sTUVFRWpJdy85TkV2MEVDKzlQV2YxUnN6NTZrNXFlMQplbjVnOW9uTkVMZ05pZlNoOE1iR1RoYnRiRGluOUZUa0cvaW00cTlkRlkwM0FzTzN5YWRRZTBxa3l4eWJjUysxCjRYSjFGUWYxemVHbEg3T0phRG9ydFJDR0VtZTZ1MWg5WThBeE5lakNhcTRaVjB3b2x0YTN3SVB4VXpYbURKOTcKcGxFSGlLL1V5SG5BV3RZZlhXRmZXQ0kvSmo5WHFnZ0N1UXlYamd6cG1IKytTQUV0Mk1YaHpVWi9XOXdBSEhkbQpQQnA1emxKUmdIQWRCd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3CkF3RUIvekFkQmdOVkhRNEVGZ1FVMHN5ejlHOCtzS3o3ZDJqQXBoWXZQTmFIdE1vd0RRWUpLb1pJaHZjTkFRRUwKQlFBRGdnRUJBQ21wR3FCZjZ0aXBkS0lCeThZZ0tPWW9COHpCUVRCSTExeUdJWWd3cFBzTFdwazdyRWZLU0lJVgp5UzRkODJwbGUwNFMzbEpRMUwrR0RVZDl5UTc1VWtyM2NPNmRDeUJJT2Vva2ZCTkpkTFZKalRJNGZqNXFsamxuCkgxRUhobExxSW0wOXI5OTRoMFdYMzFUOVBtTFd5aU84MVJ1QmF2eHF1dHRQK3pxNUJpUEpvL0VCOVFsVnJ2c3gKVGw1Z2lpSXRCczh1UWI4MlV5K0lkeXUwTG5Zd3l2U2FvcEZlZDY3SFNyWFF0V0VSVVBtam1ZVmp2Nlk5VjRYcApTaUFhckU3b0d4c01Bb2FQblhxeUs4QlJwa2xVV054eVo0L2I4a1NEUGFsZHgwSVZla1pIVTI1UGlQa2pQZXVBCm5aWk4zUGdHcjVuMTRXdVlhdDBDdllNL2JOREUreEk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://172.20.10.8:32766\n  name: kwok-kwok1\ncontexts:\n- context:\n    cluster: kwok-kwok1\n    user: kwok-kwok1\n  name: kwok-kwok1\ncurrent-context: kwok-kwok1\nkind: Config\npreferences: {}\nusers:\n- name: kwok-kwok1\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU0VENDQThtZ0F3SUJBZ0lJQ3JZM25QT0o5VFl3RFFZSktvWklodmNOQVFFTEJRQXdFakVRTUE0R0ExVUUKQXhNSGEzZHZheTFqWVRBZ0Z3MHlOREF6TVRVeE1UUTRNalZhR0E4eU1USTBNREl5TVRFeE5EZ3lOVm93TGpFWApNQlVHQTFVRUNoTU9jM2x6ZEdWdE9tMWhjM1JsY25NeEV6QVJCZ05WQkFNVENtdDNiMnN0WVdSdGFXNHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFEyNlEzS2xpZWcrckR6OUxQZmRjNXNVbEkKYk93TmdlT3RFQm1EK0tieHVYUWxwNGl0MFRrSWtWeEJMb2IyaXMwQ2U3T3Q1MkdYZXFXNUd2dkJBNG14Rkt4cQo3UjY2dEVtd21rOGJ0c3BRanV3dTVoNDVQUTR6R01tbHhJZW9uUWZxRWdQcTRZZittYzJhczYrZE55bE1BaXR0CjRNbTBYWGEwcm1UTE9WU3Z6ZkhFQUxFUnRBSnF6OWt6Q1VwVVIxQmszZ3BuSmtiTWZqdzFYdjlwMUlBZUc3U3YKYmcxR0lwTE00dmtDSS81allBaWhUTTdSenhGeGp1ZExkUDlxL28yY1hQSWJUcTQvR2ZnUWRRUGUwdFJGOXdqYQpKL1lwL0hYakFZTmRWS0xYSXE4eEZUc090NURUcE9QWnQxaWxFZHI5WjZMYzVNWG5KMGQxd1dFTmxBMk5BZ01CCkFBR2pnZ0liTUlJQ0Z6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0R3WURWUjBsQkFnd0JnWUVWUjBsQURBTUJnTlYKSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZOTE1zL1J2UHJDcyszZG93S1lXTHp6V2g3VEtNSUlCd3dZRApWUjBSQklJQnVqQ0NBYmFDQ210MVltVnlibVYwWlhPQ0VtdDFZbVZ5Ym1WMFpYTXVaR1ZtWVhWc2RJSVdhM1ZpClpYSnVaWFJsY3k1a1pXWmhkV3gwTG5OMlk0SWthM1ZpWlhKdVpYUmxjeTVrWldaaGRXeDBMbk4yWXk1amJIVnoKZEdWeUxteHZZMkZzZ2dsc2IyTmhiR2h2YzNTQ0dXdDNiMnN0YTNkdmF6RXRhM1ZpWlMxaGNHbHpaWEoyWlhLSApCSDhBQUFHSEVBQUFBQUFBQUFBQUFBQUFBQUFBQUFHSEVQNkFBQUFBQUFBQUFBQUFBQUFBQUFHSEVQNkFBQUFBCkFBQUF2TkIwLy81aTk4dUhCTUNvQW9XSEVQNkFBQUFBQUFBQUFMYTl1YkJqN3hXSEVQMndSUUlZZTY4QUFPaGkKZG1TdjBQV0hFUDZBQUFBQUFBQUFpRlZHLy80YmQ0ZUhFUDZBQUFBQUFBQUF6TVFaU0o3dWg5Q0hFUDZBQUFBQQpBQUFBalFEOXRpdWtvc2FIRVA2QUFBQUFBQUFBem9FTEhMMHNCcDZIRVA2QUFBQUFBQUFBc1pxSFlGNzV3RVNICkVQNkFBQUFBQUFBQXZOQjAvLzRtdEdTSEVQMEh0UnJNWmdBQXBoZmJYZ3EzNmZHSEVQNkFBQUFBQUFBQThQTi8KNSs4RkNGU0hFUDZBQUFBQUFBQUFibEZWc3VyVSs5MkhFUDZBQUFBQUFBQUFGTkd5ekNra2dPdUhFUDZBQUFBQQpBQUFBaXhDN3dOWWJFdjJIQk1ZU0FBRXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQVFNQjVCSjJDZENuVTM4Cm9vOGk5VjVUR0NrUzNnQVlxQWV2aUFlVnh3RUZENWpPRVR5WUVqZXNRUVJlYTU3a21oc2RlRzdyY0lOeWpQZlMKRWltbGkvMC9iSmFXbHJ0QkRYdDhzWXNUMllTNjYvTzhVV0hld2Z6dlVCU3Z0d05xNFBLVTBQSXcxTW55emxXVQpyTE5lUWJFdGI4cVdUaERFQzhXOXhYQllRdXZkSnF5U0JFTWtISGFHdkRIMVQ2RythQzN5OWwrR1lxYmdvUzJDClM0bU5XdHFIQjZuM2JnTDRPaE1FRUxpbjZ5RTRhMEhDWnFqMVdIZThpWnZDc2xzM25OWmxtL2pBNE1ndkJQekMKQnY4V0lOL0hyZ1d2RWhMTlpjM1N3OTNIeVpnTVJJblFmU0hodjlNQmRTdHB3MTNEc05ER0Z0Z0ZVWlFpeVEwNwpHb2RkZEdVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBME51a055cFlub1BxdzgvU3ozM1hPYkZKU0d6c0RZSGpyUkFaZy9pbThibDBKYWVJCnJkRTVDSkZjUVM2Rzlvck5BbnV6cmVkaGwzcWx1UnI3d1FPSnNSU3NhdTBldXJSSnNKcFBHN2JLVUk3c0x1WWUKT1QwT014akpwY1NIcUowSDZoSUQ2dUdIL3BuTm1yT3ZuVGNwVEFJcmJlREp0RjEydEs1a3l6bFVyODN4eEFDeApFYlFDYXMvWk13bEtWRWRRWk40S1p5Wkd6SDQ4TlY3L2FkU0FIaHUwcjI0TlJpS1N6T0w1QWlQK1kyQUlvVXpPCjBjOFJjWTduUzNUL2F2Nk5uRnp5RzA2dVB4bjRFSFVEM3RMVVJmY0kyaWYyS2Z4MTR3R0RYVlNpMXlLdk1SVTcKRHJlUTA2VGoyYmRZcFJIYS9XZWkzT1RGNXlkSGRjRmhEWlFOalFJREFRQUJBb0lCQUMyVUlTd2d3NklrSzdGNwp3d2VnOEwwWVlXTzYwWERKTGNSd3hRQzEzTWpYcmU4aHRvUW9Lb2dpSUwzZ3gzYzZKeThwaTdhaHpmeGV1WmZCCnVic1BhSmNLYWU0VHZTY0ZmU2RiSlhSbzJaSG0vc2ZsVkNjdG1kR3cwU0NwMk9rRkM5c2EvMXZjeCs3WjViS2oKRCtvQlJiUGVyVmVYUEsxdDBCL3lCdkVLbTk2WmI5U1JRNExtOEtLOUN5WGRVQlQvV2ZMM3ZMbTdJY3ljZDE3SwpEc2JsUFBsOHNQaGV4YzFmM3F1bnZDZmpSRjJLaUJpMlFONHVWamgvc3hNa1U4WWdIVU5SWWtMMzg5UlZlYXRyCmF1Y01VOHcvNFJlVThSd29sd0sxc3czcHE1Mk50RzBUVkp3WUR1R2d5RHRNTGcvQzdhZy85MXJHdWN2ZUtqaWYKb2F4MGJJRUNnWUVBMmNvcDJobXpUdVFnL3Nha2JHNUxSckIwTzFJbnkwT1V3aWo4QzJiV0JGek1lSEJDSUxWcgpYSG9ROWRTc05mcjFsVSs3YXlhR1ZZaU9oOWF3YXVtMVpMT2lyazdXZGF6VXp3STBSSExyYW5aNWI3a2piSlJtCmIxS0RjckpIY0ZzK3phZGRiRHVQVUdHMEVCbVB6ZGFLK0lvMmZMOEl1bTY0VVdpd3R0M0lKWkVDZ1lFQTlZQlIKTXk4N21XWUJETmtreVlYbzNrOTNHSTBzckFMeVd2UEVWYkRNZ3BSc1hpRXRMSWtxL0dpdnVGMHkxRDR4U1IvNgowMUdvUFRPdUZBTWR2VTdZd3VROXVodlZKREpPRXdYdGxKanExYndYM2wvUEU2MktnMTk0ZkJLYkNzSy91V1NpClo5ZERIcFdzb2RoWTY3ZFkyM0t5a2U0MW1xZ1ZOZ0tVSFRVOGVqMENnWUJkWm8vd1V4bE0raFVVYm9oUllETzAKU3pSdHhGd0FsaWtUNDVQRUtBUWN0dGVSeDBMMDJCa0UvZXlNSVBzQjQzQ3k2aERNY1NjblEzc3MwbXV5VGl4VwoxWnNzK2U2TFpPV1hLYkRVc2h3MytqczJLTVlDYU5wTlg2dXo0clUwZ0UwODBVd0ZnTDJEa1lNeGJHVDV0OHE5CnNEaVI0ek9SRUs3SGF3aHVSRXJ6b1FLQmdHOTBYdWptNDU3andVeE05TGVNMU1qQXVPZnJoOEZiNFIxTGwvSHoKUHhWMVByR0pURkh3d0JReGpyMGJpcXp5d3p0WWltNFBuMXFSc05FakRRaFoyR3k2WkErdS9SZmV3clUrTnJzRQpwWEI5WVRTeXVIZE5qUm5SYVFpakJjSmY0ZHpRQkM4eWVpVlRmRGxKMkN6RFkxTFZncDVmei9RenBOV05YQ0xhCmZXZGRBb0dBSUkyZ0RzaTMzYTdHamxJK3BCdFJUdEVwOCtEZkswakl0RmJKYXV0VUxleTJoSE4xZTlacVBWTEsKNUVGc2VWOGcxaXRNUXV0bGp6WUt2UU1GK2tQaXRCdnpHcWFNcHJjakFmV0NLclNxMjRsMzlxUU5mVFByUlJBNApQMEVvLzlXRkhPS0VRM1A4UytIL3VkMm8yWUpmRVoyOXBwQncvdVZxeVhyUSt0K1BjWkE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="))
	//cfg, err := clientcmd.BuildConfigFromFlags("", clientcmd.RecommendedHomeFile)
	if err != nil {
		t.Fatal(err)
	}
	c, err := discovery.NewDiscoveryClientForConfig(cfg)
	if err != nil {
		t.Fatal(err)
	}
	version, err := c.ServerVersion()
	if err != nil {
		t.Fatal(err)
	}
	t.Log(version)
}
